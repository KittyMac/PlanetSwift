//
// Autogenerated by gaxb at 04:09:47 PM on 03/27/15
//

import UIKit

public class ActivityIndicatorView: ActivityIndicatorViewBase {
    lazy public var activityIndicator = UIActivityIndicatorView()
    override open var view: UIView {
        get {
            return activityIndicator
        }
        set {
            if newValue is UIActivityIndicatorView {
                activityIndicator = newValue as! UIActivityIndicatorView
            }
        }
    }
    
    open override func gaxbPrepare() {
        super.gaxbPrepare()
        
        if startAnimating != nil {
            NotificationCenter.`default`.addObserver(self, selector: #selector(ActivityIndicatorView.startAnimating(_:)), name:NSNotification.Name(rawValue: startAnimating!), object:nil)
        }
        if stopAnimating != nil {
            NotificationCenter.`default`.addObserver(self, selector: #selector(ActivityIndicatorView.stopAnimating(_:)), name:NSNotification.Name(rawValue: stopAnimating!), object:nil)
        }
        if hidesWhenStopped != nil {
            activityIndicator.hidesWhenStopped = hidesWhenStopped!
        }
        
#if os(iOS)
        if activityIndicatorViewStyle != nil {
            activityIndicator.activityIndicatorViewStyle = UIActivityIndicatorViewStyle.fromPlanetUIActivityIndicatorViewStyle(activityIndicatorViewStyle!)
        }
#endif
        if color != nil {
            activityIndicator.color = color!
        }
    }
    
    @objc func startAnimating(_ note:Foundation.Notification) {
        activityIndicator.startAnimating()
    }
    
    @objc func stopAnimating(_ note:Foundation.Notification) {
        activityIndicator.stopAnimating()
    }
}
