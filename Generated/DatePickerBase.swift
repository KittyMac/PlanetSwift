//
// Autogenerated by gaxb at 05:41:33 PM on 06/30/15
//

import UIKit
import PlanetSwift

public class DatePickerBase : View {


    public override func copy() -> GaxbElement {
        let copied = super.copy() as! DatePicker


        return copied
    }

	public override func visit(visitor: (GaxbElement) -> ()) {
        super.visit(visitor)

	}

    override public func setElement(element: GaxbElement, key:String) {
        super.setElement(element, key:key)
    }

    override  public func isKindOfClass(className: String) -> Bool {
        if className == "DatePicker" {
            return true
        }
        return super.isKindOfClass(className)
    }

    override public func setAttribute(value: String, key:String) {
        super.setAttribute(value, key:key)
        switch key {
            default:
                break
        }
    }

    override public func imprintAttributes(receiver: GaxbElement?) -> GaxbElement? {
       return super.imprintAttributes(receiver)
    }

    override public func attributesXML(useOriginalValues:Bool) -> String {
        var xml = ""
        if useOriginalValues {
            for (key, value) in originalValues {
                xml += " \(key)='\(value)'"
            }
        } else {
    }
        xml += super.attributesXML(useOriginalValues)

        return xml
    }

    override public func sequencesXML(useOriginalValues:Bool) -> String {
        var xml = ""
        xml += super.sequencesXML(useOriginalValues)

        return xml
    }

    override public func toXML(useOriginalValues:Bool) -> String {
        var xml = "<DatePicker"
        if (parent == nil || parent?.xmlns != xmlns) {
            xml += " xmlns='\(xmlns)'"
        }

        xml += attributesXML(useOriginalValues)

        let sXML = sequencesXML(useOriginalValues)
        xml += sXML == "" ? "/>" : ">\(sXML)</DatePicker>"
        return xml
    }

    override public func toXML() -> String {
        return toXML(false)
    }

    override public func description() -> String {
        return toXML()
    }

}
