//
// Autogenerated by gaxb at 02:35:55 PM on 12/17/14
//

import UIKit

public class Label: LabelBase {
    public var label = UILabel()
    
    override public var view: UIView {
        get {
            return label
        }
        set {
            if newValue is UILabel {
                label = newValue as UILabel
            }
        }
    }
    
    public override func gaxbInit() {
        super.gaxbInit()
        
        if text != nil {
            label.text = text!
        }
        if textColor != nil {
            label.textColor = textColor
        }
        if adjustsFontSizeToFitWidth != nil {
            label.adjustsFontSizeToFitWidth = adjustsFontSizeToFitWidth!
        }
        label.minimumScaleFactor = CGFloat(minimumScaleFactor)
        if numberOfLines != nil {
            label.numberOfLines = numberOfLines!
        }
        if textAlignment != nil {
            switch textAlignment! {
            case PlanetUI.textAlignment.Center:
                label.textAlignment = .Center
            case PlanetUI.textAlignment.Right:
                label.textAlignment = .Right
            case PlanetUI.textAlignment.Left:
                label.textAlignment = .Left
            case PlanetUI.textAlignment.Justified:
                label.textAlignment = .Justified
            case PlanetUI.textAlignment.Natural:
                label.textAlignment = .Natural
            }
        }
        if fontName != nil && fontSize != nil {
            label.font = UIFont(name: fontName!, size: CGFloat(fontSize!))
        }
    }
    
}
