//
// Autogenerated by gaxb at 02:35:55 PM on 12/17/14
//

import UIKit

public class Label: LabelBase {
    
    lazy public var label = UILabel()
    override public var view: UIView {
        get {
            return label
        }
        set {
            if newValue is UILabel {
                label = newValue as UILabel
            }
        }
    }
	
	public class func lineBreakModeToNSLineBreakMode(mode:PlanetUI.LineBreakMode) -> NSLineBreakMode {
		switch mode {
		case .truncatingTail:
			return .ByTruncatingTail
		case .wordWrapping:
			return .ByWordWrapping
		case .charWrapping:
			return .ByCharWrapping
		case .truncatingHead:
			return .ByTruncatingHead
		case .clipping:
			return .ByClipping
		case .truncatingMiddle:
			return .ByTruncatingMiddle
		}
	}
	
    public override func gaxbPrepare() {
        super.gaxbPrepare()
        
        if text != nil {
            label.text = text!
        }
        if textColor != nil {
            label.textColor = textColor
        }
        if adjustsFontSizeToFitWidth != nil {
            label.adjustsFontSizeToFitWidth = adjustsFontSizeToFitWidth!
        }
        label.minimumScaleFactor = CGFloat(minimumScaleFactor)
        if numberOfLines != nil {
            label.numberOfLines = numberOfLines!
        }
        if textAlignment != nil {
			label.textAlignment = TextField.textAlignmentToNSTextAlignment(textAlignment!)
        }
        if fontName != nil && fontSize != nil {
            label.font = UIFont(name: fontName!, size: CGFloat(fontSize!))
        }
		if lineBreakMode != nil {
			label.lineBreakMode = Label.lineBreakModeToNSLineBreakMode(lineBreakMode!)
		}
    }
    
}
