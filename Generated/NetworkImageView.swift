//
// Autogenerated by gaxb at 02:43:47 PM on 01/20/15
//

import UIKit

public class NetworkImageView: NetworkImageViewBase {
    
    lazy public var networkImageView: PlanetNetworkImageView = PlanetNetworkImageView()
	override public var imageView : UIImageView {
		get {
			return networkImageView
		}
		set {
			if newValue is PlanetNetworkImageView {
				networkImageView = newValue as! PlanetNetworkImageView
			}
		}
	}
    
    public func setImageWithPath(_ path:String?, completion:((success:Bool)->Void)?) {
        if let path = path, let url = URL(string: path) {
            
            var placeholder:UIImage?
            if placeholderPath != nil {
                placeholder = UIImage(contentsOfFile: String(bundlePath: placeholderPath!))
            }
            networkImageView.setImage(url, placeholder: placeholder, completion: completion)
        }
        else {
            super.setImageWithString(path)
            completion?(success: false)
        }
    }
	
    public override func setImageWithString(_ image: String?) {
		self.setImageWithPath(image, completion: nil)
	}
	
	public override func gaxbPrepare() {
		super.gaxbPrepare()
		
        if placeholderPath != nil {
            networkImageView.image = UIImage(contentsOfFile: String(bundlePath: placeholderPath!))
        }
        
		if placeholderContentMode != nil {
			networkImageView.placeholderContentMode = UIViewContentMode.fromPlanetUIContentMode(placeholderContentMode!)
		}
		if contentMode != nil {
			networkImageView.downloadedContentMode = UIViewContentMode.fromPlanetUIContentMode(contentMode!)
		}
	}
}
