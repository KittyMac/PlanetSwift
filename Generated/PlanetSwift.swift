
//
// Autogenerated by gaxb at 05:07:30 PM on 12/12/14
//

public class PlanetSwift {

	public class func classWithName(name : String) -> GaxbElement? {
		switch name {
		case "View":
			return View()
		case "Object":
			return Object()
		default:
			return nil
		}
	}

	public class func readFromFile(filepath : String) -> GaxbElement? {
		if let xmlData = NSData(contentsOfFile: filepath) {
			var error: NSError?
			if let xmlDoc = AEXMLDocument(xmlData: xmlData, error: &error) {
				return PlanetSwift.parseElement(xmlDoc.rootElement as AEXMLElement)
			}
		}
		return nil
	}

	public class func parseElement(element: AEXMLElement) -> GaxbElement? {
		println("element = " + element.name)
		if let entity : GaxbElement = PlanetSwift.classWithName(element.name) {
			for (attribute, value) in element.attributes {
				entity.setAttribute(value as String, key: attribute as String)
			}

			for child in element.children {
				if let subEntity = PlanetSwift.classWithName(child.name) {
					PlanetSwift.parseElement(child)
					entity.setElement(subEntity, key: child.name)
					println("child name = " + child.name);
				}
			}

			return entity
		}
		return nil
	}

}




//+ (id) readFromData:(NSData *)data withParent:(id)p AndMemoryLite:(BOOL)memLite
//+ (id) readFromData:(NSData *)data withParent:(id)p
//+ (id) readFromData:(NSData *)data
//+ (id) readFromFile:(NSString *)path
//+ (id) readFromString:(NSString *)xml_string
//+ (id) readFromDataFast:(NSData *)data
//+ (id) readFromFileFast:(NSString *)path
//+ (id) readFromStringFast:(NSString *)xml_string
//+ (NSString *) writeToString:(id)object
//+ (NSString *) writeOriginalXMLToString:(id)object
//+ (void) write:(id)object toFile:(NSString *)path
//+ (NSData *) writeToData:(id)object
//- (id) initWithParent:(id)p AndMemoryLite:(BOOL)m
//static char * DecodeAllAmpersands(char * src)
//static void SetValue(NSObject * object, NSObject * childObject, const char * elementName, const char * className)
//static NSObject * CreateElementWithNamespace(TBXMLElement * element, const char * currentNamespace, NSMutableDictionary * namespaceMap, NSObject * parent)
