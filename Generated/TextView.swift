//
// Autogenerated by gaxb at 02:53:18 PM on 01/28/15
//

import UIKit

public class TextView: TextViewBase {

	lazy public var textView = UITextView()
	lazy private var textViewDelegate = TextViewDelegateHelper()
	
	override public var view: UIView {
		get {
            if textView.delegate == nil {
                textView.delegate = textViewDelegate
            }
            return textView
		}
		set {
			if newValue is UITextView {
				textView = newValue as! UITextView
			}
		}
	}
	
	public override func gaxbPrepare() {
		super.gaxbPrepare()
		
		textViewDelegate.delegate = self
		
		if text != nil {
			textView.text = text!
		}
		if fontName != nil {
			textView.font = UIFont(name: fontName!, size: UIFont.systemFontSize())
		}
        if fontSize != nil {
            textView.font = textView.font.fontWithSize(CGFloat(fontSize!))
        }
		if textColor != nil {
			textView.textColor = textColor!
		}
		if textAlignment != nil {
			textView.textAlignment = NSTextAlignment.fromPlanetUITextAlignment(textAlignment!)
		}
		if selectable != nil {
			textView.selectable = selectable!
		}
		if editable != nil {
			textView.editable = editable!
		}
	}
	
	func textViewDidChange(textView: UITextView) {
		if onChange != nil {
			doNotification(onChange!)
		}
	}
	
	func textViewDidEndEditing(textView: UITextView) {
		if onEndEditing != nil {
			doNotification(onEndEditing!)
		}
	}
	
	func doNotification(note: String) {
		let (scopeObject: AnyObject?, name) = self.parseNotification(note)
		if name != nil {
			NSNotificationCenter.defaultCenter().postNotificationName(name!, object: scopeObject)
		}
	}
}

private class TextViewDelegateHelper : NSObject, UITextViewDelegate {
	
	weak var delegate:TextView?
	
	func textViewDidChange(textView: UITextView) {
		
		if delegate != nil {
			delegate?.textViewDidChange(textView)
		}
	}
	
	func textViewDidEndEditing(textView: UITextView) {
		
		if delegate != nil {
			delegate?.textViewDidChange(textView)
		}
	}
}